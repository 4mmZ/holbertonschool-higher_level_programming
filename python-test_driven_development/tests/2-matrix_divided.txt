>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6]]

>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided(matrix, "School")
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided("School", 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[0.33, 0.67, 1.0], [1.33, 1.67, 2.0, 4]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, float('inf')]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, inf]]

>>> matrix_divided([[1, 2, 3], [4, 5, float('NaN')]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, nan]]

>>> matrix_divided([[1, 2, 3], [4, 5, float('NaN')]], float('NaN'))
[[nan, nan, nan], [nan, nan, nan]]

>>> matrix_divided([[1, 2, 3], [4, 5, float('NaN')]], float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, nan]]

>>> matrix_divided([[1, 2, 3], [4, 5, float('inf')]], float('NaN'))
[[nan, nan, nan], [nan, nan, nan]]

>>> matrix_divided([[1, 2, 3], [4, 5, float('inf')]], float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, nan]]

>>> matrix_divided(matrix, )
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided(, 3)
Traceback (most recent call last):
...
SyntaxError: invalid syntax

>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

